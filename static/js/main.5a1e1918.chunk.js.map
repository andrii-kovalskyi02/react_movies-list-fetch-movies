{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","getMovieCard","a","Title","Plot","Poster","imdbID","Promise","resolve","FindMovie","handleAddMovie","useState","setMovie","setQuery","isLoading","setIsLoading","isFound","setIsFound","isFindMovieDisabled","handleFindMovieButtonClick","event","preventDefault","normalizedQuery","trim","film","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a1e1918.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { Movie } from './types/Movie';\nimport { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=a179fb4';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n\nexport const getMovieCard = async (query: string): Promise<Movie | null> => {\n  const movie = await getMovie(query);\n\n  if ('Title' in movie && 'Plot' in movie && 'Poster' in movie\n    && 'imdbID' in movie) {\n    const {\n      Title,\n      Plot,\n      Poster,\n      imdbID,\n    } = movie;\n\n    const imgUrl = Poster !== 'N/A'\n      ? Poster\n      : 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n    return Promise.resolve({\n      title: Title,\n      description: Plot,\n      imgUrl,\n      imdbUrl: `https://www.imdb.com/title/${imdbID}/`,\n      imdbId: imdbID,\n    });\n  }\n\n  return null;\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovieCard } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  handleAddMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ handleAddMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isFound, setIsFound] = useState(true);\n\n  const isFindMovieDisabled = !query;\n\n  const handleFindMovieButtonClick = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    try {\n      setIsLoading(true);\n      const normalizedQuery = query.trim();\n\n      if (!normalizedQuery) {\n        return;\n      }\n\n      const film = await getMovieCard(normalizedQuery);\n\n      if (!film) {\n        setIsFound(false);\n      } else {\n        setIsFound(true);\n        setMovie(film);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const resetMovie = () => {\n    setMovie(null);\n    setQuery('');\n    setIsFound(true);\n  };\n\n  const onAddClick = () => {\n    if (movie) {\n      handleAddMovie(movie);\n      resetMovie();\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': !isFound })}\n              value={query}\n              onChange={event => setQuery(event.target.value)}\n            />\n          </div>\n\n          {!isFound && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', 'is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={isFindMovieDisabled}\n              onClick={handleFindMovieButtonClick}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={onAddClick}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (movie: Movie) => {\n    const isMovieExists = movies.some(film => film.imdbId === movie.imdbId);\n\n    if (!isMovieExists) {\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie handleAddMovie={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}